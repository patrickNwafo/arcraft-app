{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\n    defineNestedType,\n    defineDocumentType,\n    makeSource\n} from 'contentlayer/source-files';\n\nconst Post = defineDocumentType(() => ({\n    name: \"Post\",\n    filePathPattern: `blog/*mdx`,\n    contentType: \"mdx\",\n    fields: {\n        title: {\n            type: \"string\",\n            description: \"The title of the post\",\n            required: true,\n        },\n        excerpt: {\n            type: \"string\",\n            description: \"The description of the post\",\n            required: true,\n        },\n        date: {\n            type: \"date\",\n            description: \"The date of the post\",\n            required: true,\n        },\n        image: {\n            type: \"string\",\n            description: \"The featured image of the post\",\n            required: true,\n        },\n        author: {\n            type: \"string\",\n            description: \"The author of the post\",\n            required: true,\n        },\n        categories: {\n            type: \"list\",\n            of: Category,\n            description: \"The cathegories of the post\",\n            required: true,\n        },\n    },\n    computedFields: {\n        url: {\n            type: \"string\",\n            resolve: (doc) => `/${doc._raw.flattenedPath}`,\n        }\n    }\n}));\n\nconst Category = defineNestedType(() => ({\n    name: \"Category\",\n    fields: {\n        title: {\n            type: \"string\",\n            description: \"The title of the category\",\n            required: true,\n        }\n    }\n}));\n\nconst Project = defineDocumentType(() => ({\n    name: \"Projects\",\n    filePathPattern: `projects/*.mdx`,\n    contentType: \"mdx\",\n    fields: {\n        title: {\n            type: \"string\",\n            description: \"The title of the project\",\n            required: true,\n        },\n        location: {\n            title: \"string\",\n            description: \"The location of the project\",\n            required: true,\n        },\n        date: {\n            title: \"date\",\n            description: \"The date of the project\",\n            required: true,\n        },\n        image: {\n            title: \"string\",\n            description: \"The featured image of the project\",\n            required: true,\n        },\n        client: {\n            title: \"string\",\n            description: \"The client of the project\",\n            required: true,\n        },\n        role: {\n            title: \"string\",\n            description: \"The role of the project\",\n            required: true,\n        },\n        year: {\n            title: \"string\",\n            description: \"The year of the project\",\n            required: true,\n        },\n    },\n    computedFields: {\n        url: {\n            type: \"string\",\n            resolve: (doc) => `/${doc._raw.flattenedPath}`,\n        }\n    }\n\n}));\n\nexport default makeSource({\n    contentDirPath: \"content\",\n    documentTypes: [Post, Project],\n});\n\n"],
  "mappings": ";AAAA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEP,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAChD;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,WAAW,iBAAiB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,EACJ;AACJ,EAAE;AAEF,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,UAAU;AAAA,MACN,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,OAAO;AAAA,MACP,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAChD;AAAA,EACJ;AAEJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AACjC,CAAC;",
  "names": []
}
